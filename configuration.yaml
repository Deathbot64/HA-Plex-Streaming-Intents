intent_script:
  tautullistream:
    speech:
      text: There are {{ states('sensor.tautulli_watching') }} streams going.
  deskoff:
    speech:
      text: Turning the light off now.
    action:
      service: switch.turn_off
      data: {}
      target:
        entity_id: switch.desk_lights
  deskon:
    speech:
      text: Turning the light on now.
    action:
      service: switch.turn_on
      data: {}
      target:
        entity_id: switch.desk_lights
  bedroomtvoff:
    speech:
      text: Turning the tv off now.
    action:
      service: switch.turn_off
      data: {}
      target:
        entity_id: switch.the_jukebox
  bedroomtvon:
    speech:
      text: Turning the tv on now.
    action:
      service: switch.turn_on
      data: {}
      target:
        entity_id: switch.the_jukebox
  computeroff:
    speech:
      text: Turning the computer off now.
    action:
      service: switch.turn_off
      data: {}
      target:
        entity_id: switch.wake_on_lan
  computeron:
    speech:
      text: Turning the computer on now.
    action:
      service: switch.turn_on
      data: {}
      target:
        entity_id: switch.wake_on_lan
  plexstreamtv:
    speech:
      text: "{{ shows }} is playing now."
    action:
      - service: media_player.play_media
        continue_on_error: true
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: tvshow
          media_content_id: 'plex://{"library_name": "TV", "show.title": "{{ shows }}", "episode.unwatched": true, "allow_multiple": 1 }'
      - wait_template: "{{ is_state('sensor.deathbot64_state', 'playing') }}"
        timeout: "00:00:12"
      - if: 
          - "{{ not wait.completed }}"
        then:
          - service: media_player.play_media
            target:
              entity_id: "{{ media_player }}"
            data: 
              media_content_type: tvshow
              media_content_id: 'plex://{"library_name": "TV", "show.title": "{{ shows }}", "allow_multiple": 1 }'
        else:
          - stop: "" 
  plexrandomtv:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: tvshow
          media_content_id: 'plex://{"library_name": "TV", "show.title": "{{ shows }}", "shuffle": "1", "allow_multiple": 1 }' 
  plexrandomseason:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: tvshow
          media_content_id: 'plex://{"library_name": "TV", "show.title": "{{ shows }}", "season_number": "{{ season }}", "shuffle": "1", "allow_multiple": 1 }' 
  plexspecificepisode:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: tvshow
          media_content_id: 'plex://{"library_name": "TV", "show.title": "{{ shows }}", "season_number": "{{ season }}", "episode_number": "{{ episode }}" }'   
  plexmovie:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: movie
          media_content_id: 'plex://{"library_name": "Movies", "title": "{{ movie }}" }'   
  plexplaylist:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: playlist
          media_content_id: 'plex://901a9a91c139e8299145175bbc84754596768d3f/{{ playlist }}?shuffle=1'   
  plexcurrentshow:
    speech:
      text: Starting the playback in a moment.
    action:
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data: 
          media_content_type: playlist
          media_content_id: 'plex://901a9a91c139e8299145175bbc84754596768d3f/1643426'   
  plexpause:
    speech:
      text: Pausing the playback in a moment.
    action:
      - service: media_player.media_pause
        target:
          entity_id: "{{ media_player }}"
        data: {}    
  plexresume:
    speech:
      text: Resuming the playback in a moment.
    action:
      - service: media_player.media_play
        target:
          entity_id: "{{ media_player }}" 
        data: {}    
  plexstop:
    speech:
      text: Stopping the playback in a moment.
    action:
      - service: media_player.media_stop
        target:
          entity_id: "{{ media_player }}" 
        data: {}   
  setalarm:
    speech:
      text: Setting the alarm now.
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.new_alarm 
        data: 
          time: "{{ time }}"
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.alarm_toggle
        data: {}   
  cancelalarm:
    speech:
      text: Cancelling the alarm now.
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.alarm_toggle
        data: {}    
  cancelbedroomsleeptimer:
    speech:
      text: Cancelling the sleep timer now.
    action:
      - service: mqtt.publish
        data: 
          topic: homeassistant/button/Jukebox/jukebox_custom/action
          payload: "shutdown -a"
      - service: notify.jukebox
        data:
          message: Cancelling the Sleep Timer    
  bedroomsleeptimerminutes:
    speech:
      text: Setting the sleep timer.
    action:
      - service: mqtt.publish
        data: 
          topic: homeassistant/button/Jukebox/jukebox_custom/action
          payload: "shutdown -s -t {{ minutes }}"
      - service: notify.jukebox
        data: 
          message: >
            Setting the sleep timer for {{ (minutes|float / 60)|round }} minutes.   
  bedroomsleeptimerhours:
    speech:
      text: Setting the sleep timer.
    action:
      - service: mqtt.publish
        data: 
          topic: homeassistant/button/Jukebox/jukebox_custom/action
          payload: "shutdown -s -t {{ hours }}"
      - service: notify.jukebox
        data:
          message:  >
            Setting the sleep timer for {{ (hours|float / 3600)|round }} hours.  
  bedroomsleeptimerwords:
    speech:
      text: Setting the sleep timer.
    action:
      - service: mqtt.publish
        data: 
          topic: homeassistant/button/Jukebox/jukebox_custom/action
          payload: "shutdown -s -t {{ hourswords }}"
      - service: notify.jukebox
        data:
          message: > 
            Setting the sleep timer for {{ hourswords|int / 3600 }} hours.   
  settimer:
    speech:
      text: Setting the timer now.
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.timer_minutes
        data: 
          value: "{{ duration }}"
      - service: notify.mobile_app_phone
        data:
          title: "title"
          message: "timer"   
  setalarmphone:
    speech:
      text: Setting the alarm now.
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.new_alarm 
        data: 
          time: "{{ time }}"
      - service: notify.mobile_app_phone
        data:
          title: "title"
          message: "alarm"   
  settimerwords:
    speech:
      text: Setting the timer now.
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.timer_minutes
        data: 
          value: "{{ durationwords }}"
      - service: notify.mobile_app_phone
        data:
          title: "title"
          message: "timer"  
